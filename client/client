#!/bin/bash
export DIRMAIN=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" && pwd )
source $DIRMAIN/config

printf "\e[?1049h"
clear

mkdir -p "$DIRMAIN/tmp"

# FUNCTIONS
CHAT_GET() {
	socat -u tcp:$HOST:$OPORT - | gpg -q -d -o "$DIRMAIN/tmp/main" --cipher-algo AES256 --batch --yes --passphrase $PASS -
	clear
	cat "$DIRMAIN/tmp/main" | xargs --null echo -e
	rm "$DIRMAIN/tmp/main"
}
WAIT_LOOP() {
	while :
	do
		socat tcp:$HOST:$COMPORT,forever - || break
		CHAT_GET
		sleep 1.25
	done &
	LOOP_PID=$!
}
JOIN_MESSAGE() {
	echo " >> \e[3mUser $NAME_COLOR$NAME\e[m\e[3m has joined the chat\e[m << " | gpg -c --cipher-algo AES256 --batch --yes --passphrase $PASS - | socat -U tcp:$HOST:$IPORT -
}
LEAVE_MESSAGE() {
	echo " << \e[3mUser $NAME_COLOR$NAME\e[m\e[3m has left the chat\e[m >> " | gpg -c --cipher-algo AES256 --batch --yes --passphrase $PASS - | socat -U tcp:$HOST:$IPORT -
}
LOGO() {
	echo -e ""
	echo -e "     \e[1;35mBerzelius\e[m"
	echo -e "    by Tina_lel   \n"
}
CONTROLS_HELP() {
	printf "\e[s"
	printf "\e[9999;0H"
	printf "\e[7;32m| $UP: up | $DOWN: down | $QUIT: quit |\e[m"
	printf "\e[u"
}
MENU_TEST() {
	FUNCTIONS_NUMBER="$(echo ${FUNCTIONS[@]} | wc -w)"
	echo ""

	printf "\e[s"
	NUM=0
	while [[ $NUM != $FUNCTIONS_NUMBER ]]
	do
		echo -e "${FUNCTIONS[$NUM]}"
		NUM=$(( $NUM + 1 ))
	done
	printf "\e[u"

	LINE=0
	printf "\e[2K\e[100D > \e[7;32m ${FUNCTIONS[$LINE]} \e[m"
	CONTROLS_HELP
	while :
	do
		read -n 1 -s SELECTION_INPUT
		case $SELECTION_INPUT in
		$UP)
			if [[ $LINE == 0 ]]
			then
				continue
			else
				printf "\e[2K\e[100D${FUNCTIONS[$LINE]}"
				printf "\e[A"
				LINE=$(( $LINE - 1 ))
				printf "\e[2K\e[100D > \e[7;32m ${FUNCTIONS[$LINE]} \e[m"
			fi
		;;
		$DOWN)
			if [[ $LINE == $(( $FUNCTIONS_NUMBER - 1 )) ]]
			then
				continue
			else
				printf "\e[2K\e[100D${FUNCTIONS[$LINE]}"
				printf "\n"
				LINE=$(( $LINE + 1 ))
				printf "\e[2K\e[100D > \e[7;32m ${FUNCTIONS[$LINE]} \e[m"
			fi
		;;
		$QUIT)
			SOFT_EXITER
		;;
		"")
			SELECTION="${FUNCTIONS[LINE]}"
			break
		;;
		*)
		;;
		esac
	done
}
SOFT_EXITER() {
	printf "\e[?1049l"
	exit
}
EXITER() {
	LEAVE_MESSAGE
	kill $LOOP_PID
	killall "socat" > /dev/null 2>&1
	printf "\e[?1049l"
	exit
}
while :
do
	clear
	# ctrl+c trap ONLY FOR THE SELECTION PART
	trap "SOFT_EXITER" SIGINT

	LOGO

	echo -e "What server to join?"

	FUNCTIONS=( ${FUNCS[@]} )
	MENU_TEST
	$SELECTION

	clear
	LOGO

	echo -e "Enter encryption password for $HOST"
	echo -e -n "\e[1;32mPassword >>\e[m "
	read -s -r -e PASS

	# ctrl+c trap ONLY FOR THE CHAT PART
	trap "EXITER" SIGINT
	JOIN_MESSAGE
	WAIT_LOOP
	while :
	do
		read -r -e MSG
		case $MSG in
		!quit | !q)
			EXITER
		;;
		!back | !b)
			LEAVE_MESSAGE
			kill $LOOP_PID
			killall "socat" > /dev/null 2>&1
			break
		;;
		!scroll | !s)
			echo -e "Press \"q\" to enable scrolling." | less
			CHAT_GET
		;;
		!help | !h)
			kill $LOOP_PID
			killall "socat" > /dev/null 2>&1
			clear
			echo -e "\n List of commands:"
			echo -e " -----------------"
			echo -e " \"!help\"	| \"!h\" (show this message)"
			echo -e " \"!scroll\"	| \"!s\" (view chat history)"
			echo -e " \"!back\"	| \"!b\" (disconnect and return)"
			echo -e " \"!quit\"	| \"!q\" (disconnect and exit)"
			echo -e " -----------------\n"
			echo -e -n " Press Enter to return."
			read
			WAIT_LOOP
			CHAT_GET
		;;
		*)
			echo -e -n "Sending... "
			while :
			do
				echo "$NAME_COLOR$NAME\e[m: $MSG" | gpg -c --cipher-algo AES256 --batch --yes --passphrase $PASS - | socat -U tcp:$HOST:$IPORT -
				SOCAT_FAIL="$?"
				if [[ $SOCAT_FAIL != 0 ]];
				then
					sleep 0.25
					return
				else
					break
				fi
			done
		;;
		esac
	done
done
